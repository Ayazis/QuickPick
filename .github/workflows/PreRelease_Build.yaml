name: Build and Test

on:
  push:
    branches:
      - Pre-Release

jobs:
  build_and_test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'  # Adjust this to your project's .NET version

   #   - name: Restore
   #     run: dotnet restore

      - name: Extract Version
        id: get_version
        shell: pwsh
        run: |
          $projectPath = "QuickPick_Console/QuickPick.csproj"
          $projectFileContent = Get-Content $projectPath -Raw
          $versionPattern = '<Version>(.*?)<\/Version>'
          if ($projectFileContent -match $versionPattern) {
            $version = $matches[1]
            Write-Host "Extracted version: $version"
            Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$version"
          }
          else {
            Write-Error "Version extraction failed."
          }

      - name: Locate MSBuild
        id: msbuild
        shell: pwsh
        run: |
          $msbuildPath = & vswhere -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          echo "::set-output name=path::$msbuildPath"

 #     - name: Build
 #       run: |
 #         & "${{ steps.msbuild.outputs.path }}" -p:Configuration=Release

      - name: Locate VSTest
        id: vstest
        shell: pwsh
        run: |
          $vsTestPath = & vswhere -latest -products * -requires Microsoft.Component.MSBuild -find Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe
          echo "VSTEST_PATH=$vsTestPath" | Out-File -FilePath $env:GITHUB_ENV -Append

    #  - name: Test
    #    shell: pwsh
    #    run: |
    #      & "$env:VSTEST_PATH" **\*.Tests.dll



      - name: Publish
        shell: pwsh
        run: |
          & "$env:MSBUILD_PATH" -target:Publish -p:Configuration=Release -p:PublishDir=out\

      - name: Zip the published content
        shell: pwsh
        run: |
          Compress-Archive -Path out\* -DestinationPath "QuickPick $env:VERSION.zip"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

     
